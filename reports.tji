# encoding: utf-8
###  Файл описывающий типы отчётов
###  для плана taskjuggler
###
### Этот файл необходимо поместить в папку, где сохраняются генерируемые tjp-файлы
### This file must be placed in the folder where the tjp-files are saved

# Now the project has been specified completely. Stopping here would
# result in a valid TaskJuggler file that could be processed and
# scheduled. But no reports would be generated to visualize the
# results.

navigator navbar {
  hidereport @none
}

macro TaskTip [
  tooltip istask() -8<-
    '''Start: ''' <-query attribute='start'->
    '''End: ''' <-query attribute='end'->
    ----
    '''Resources:'''

    <-query attribute='resources'->
    ----
    '''Precursors: '''

    <-query attribute='precursors'->
    ----
    '''Followers: '''

    <-query attribute='followers'->
    ->8-
]

textreport frame "" {
  header -8<-
    == План отдела Информационно-технического обеспечения ==
    <[navigator id="navbar"]>
  ->8-
  footer "----"
  textreport overview "index" {
    formats html
    center '<[report id="index"]>'
    balance cost rev
  }

#  textreport "Status" {
#    formats html
#    center -8<-
#      <[report id="status.dashboard"]>
#      ----
#      <[report id="status.completed"]>
#      ----
#      <[report id="status.ongoing"]>
#      ----
#      <[report id="status.future"]>
#    ->8-
#    balance cost rev
#  }

  textreport development "Development" {
    formats html
    center '<[report id="development"]>'
    balance cost rev
  }

  textreport "Deliveries" {
    formats html
    center '<[report id="deliveries"]>'
    balance cost rev
  }

  textreport "ContactList" {
    formats html
    title "Contact List"
    center '<[report id="contactList"]>'
    balance cost rev
  }
  textreport "ResourceGraph" {
    formats html
    title "Resource Graph"
    center '<[report id="resourceGraph"]>'
    balance cost rev
  }
  balance cost rev
}

# A traditional Gantt chart with a project overview.
taskreport index "" {
  #scenarios plan, delayed
  header -8<-
  ->8-
  columns bsi { title 'WBS' },
          name, start, end, effort, effortleft, cost,
          revenue, chart { ${TaskTip} width 3000 }
  # For this report we like to have the abbreviated weekday in front
  # of the date. %a is the tag for this.
  timeformat "%a %Y-%m-%d"
  loadunit days
  hideresource @all
  hidetask (hidden)
  balance cost rev
  caption 'Все значения трудоёмкостей (effort) указаны в человекочасах.'

  footer -8<-
    === Распределение ресурсов ===

    См. [[ResourceGraph]] для детального распределения.

    === Текущий статус задач ===

    См. [[Deliveries]].
  ->8-
}

# Macro to set the background color of a cell according to the alert
# level of the task.
macro AlertColor [
  cellcolor plan.alert = 0 "#00D000" # green
  cellcolor plan.alert = 1 "#D0D000" # yellow
  cellcolor plan.alert = 2 "#D00000" # red
]

#taskreport status "" {
#  columns bsi { width 50 title 'WBS' }, name { width 150 },
#          start { width 100 }, end { width 100 },
#          effort { width 100 },
#          alert { tooltip plan.journal
#                          != '' "<-query attribute='journal'->" width 150 },
#          status { width 150 }
#  #scenarios delayed
#  balance cost rev
#
#  taskreport dashboard "" {
#    headline "Project Dashboard (<-query attribute='now'->)"
#    columns name { title "Task" ${AlertColor} width 200},
#            resources { width 200 ${AlertColor}
#                        listtype bullets
#                        listitem "<-query attribute='name'->"
#                        start ${projectstart} end ${projectend} },
#            alerttrend { title "Trend" ${AlertColor} width 50 },
#            journal { width 350 ${AlertColor} }
#    journalmode status_up
#    journalattributes headline, author, date, summary, details
#    hidetask ~hasalert(0)
#    sorttasks alert.down, delayed.end.up
#    period %{${now} - 1w} +1w
#    balance cost rev
#  }
#  taskreport completed "" {
#    headline "Already completed tasks"
#    hidetask ~(delayed.end <= ${now})
#    balance cost rev
#  }
#  taskreport ongoing "" {
#    headline "Ongoing tasks"
#    hidetask ~((delayed.start <= ${now}) & (delayed.end > ${now}))
#    balance cost rev
#  }
#  taskreport future "" {
#    headline "Future tasks"
#    hidetask ~(delayed.start > ${now})
#    balance cost rev
#  }
#}

# A list of tasks showing the resources assigned to each task.
taskreport development "" {
  #scenarios plan, delayed
  headline "Отчёт о распределении ресурсов"
  columns bsi { title 'WBS' }, name, start, end, effort { title "Work" },
          duration, chart { ${TaskTip} width 1000 }
          #duration, chart { ${TaskTip} scale day width 1000 }
  timeformat "%Y-%m-%d"
  hideresource ~(isleaf() & isleaf_())
  hidetask (hidden)
  sortresources name.up
  balance cost rev
}

# A list of all tasks with the percentage completed for each task
taskreport deliveries "" {
  headline "Project Deliverables"
  columns bsi { title 'WBS' }, name, start, end, note { width 150 }, complete,
          chart { ${TaskTip} }
#  taskroot board
  hideresource @all
  #scenarios plan, delayed
  balance cost rev
}
# A list of all employees with their contact details.
resourcereport contactList "" {
  #scenarios delayed
  headline "Contact list and duty plan"
#  columns name,
#          email { celltext 1 "[mailto:<-email-> <-email->]" },
#          Phone,
#          managers { title "Manager" },
#          chart { scale day }
  hideresource ~isleaf()
  sortresources name.up
  hidetask @all
  balance cost rev
}

# A graph showing resource allocation. It identifies whether each
# resource is under- or over-allocated for.
resourcereport resourceGraph "" {
  #scenarios plan, delayed
  headline "Диаграмма распределения ресурсов"
  columns no, name, effort, rate, weekly { ${TaskTip} }
  loadunit shortauto
  # We only like to show leaf tasks for leaf resources.
  hidetask ~(isleaf() & isleaf_())
  sorttasks plan.start.up
  balance cost rev
}

#export MSPXML "plan-soft" {
#  formats mspxml
#}
